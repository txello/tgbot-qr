import telebot # –ú–æ–¥—É–ª—å Telebot
from telebot import types # –ú–æ–¥—É–ª—å Telebot: –§—É–Ω–∫—Ü–∏—è types
from lib import SQL, QR, conf # –§–∞–π–ª lib: –§—É–Ω–∫—Ü–∏–∏ SQL –∏ QR, –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
from lang import Lang # –§–∞–π–ª lang
###     name - telegram Bot QR
###     author - txello
###     version - 1.0


bot = telebot.TeleBot(conf.API) # –î–æ—Å—Ç—É–ø –∫ API –±–æ—Ç–∞



@bot.message_handler(commands = ['start']) # /start
def start(message):
    
    conn = SQL.fetchone('SELECT {}, {} FROM {} WHERE {}=\'{}\''.format(conf.db_names[0],conf.db_names[1],conf.db_table,conf.db_names[0],message.from_user.id))
     # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     
    if conn:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        if conn[1] == 1:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π:
            bot.send_message(message.from_user.id, Lang.Rus('a1'))
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.

        elif conn[1] == 2:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π:
            bot.send_message(message.from_user.id, Lang.Eng('a1'))
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.

    else:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        a = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π',callback_data='ru')
        btn2 = types.InlineKeyboardButton(text='üá¨üáß English',callback_data='en')
        a.add(btn1,btn2)
         # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏.
         
        bot.send_message(message.from_user.id,  "Your language:",  reply_markup=a)
         # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.



@bot.message_handler(commands = ['lang']) # /lang
def lang(message):
    
    conn = SQL.fetchone('SELECT {}, {} FROM {} WHERE {}=\'{}\''.format(conf.db_names[0],conf.db_names[1],conf.db_table,conf.db_names[0],message.from_user.id))
     # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    a = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π',callback_data='ru')
    btn2 = types.InlineKeyboardButton(text='üá¨üáß English',callback_data='en')
    a.add(btn1,btn2)
     # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏.
    
    if conn:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        if conn[1] == 1:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π:
            bot.send_message(message.from_user.id,  Lang.Rus('a0'),  reply_markup=a)
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
        
        if conn[1] == 2:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π:
            bot.send_message(message.from_user.id,  Lang.Rus('a1'),  reply_markup=a)
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
    
    else:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        start(message)
         # /start



@bot.message_handler(content_types='text') # –õ—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
def qr(message):

    conn = SQL.fetchone('SELECT {}, {} FROM {} WHERE {}=\'{}\''.format(conf.db_names[0],conf.db_names[1],conf.db_table,conf.db_names[0],message.from_user.id))
     # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    if conn:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        if conn[1] == 1:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π:
            bot.send_photo(message.from_user.id, open(QR.create(message.from_user.id,message.text),'rb'),Lang.Rus('a2'))
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å QR –∫–æ–¥–æ–º.
        
        elif conn[1] == 2:
         # –ï–°–õ–ò —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π:
            bot.send_photo(message.from_user.id, open(QR.create(message.from_user.id,message.text),'rb'),Lang.Eng('a2'))
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å QR –∫–æ–¥–æ–º.
    else:
     # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
        start(message)
         # /start
    


@bot.callback_query_handler(func=lambda call:True) # –ö–Ω–æ–ø–∫–∏
def callback(call):
    
    if call.message:
     # –ï–°–õ–ò –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞:
    
        conn = SQL.fetchone('SELECT {}, {} FROM {} WHERE {}=\'{}\''.format(conf.db_names[0],conf.db_names[1],conf.db_table,conf.db_names[0],call.message.chat.id))
         # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        
        if call.data == 'ru':
         # –ï–°–õ–ò –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–†—É—Å—Å–∫–∏–π':
            if conn:
             # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
                 SQL.query('UPDATE {} SET {}=\'{}\' WHERE {}=\'{}\''.format(conf.db_table,conf.db_names[1],1,conf.db_names[0],call.message.chat.id))
                 # –∏–∑–º–µ–Ω—è–µ–º –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
            
            else:
             # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
                SQL.query('INSERT INTO {} ({},{}) VALUES({},{})'.format(conf.db_table,conf.db_names[0],conf.db_names[1],call.message.chat.id,1))
                 # –Ω–∞–∑–Ω–∞—á–∞–µ–º –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
            
            bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.id, text=Lang.Rus('a0')+Lang.Rus('a0_1'))
             # –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ.
            
            bot.send_message(call.message.chat.id, Lang.Rus('a1'))
             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            
        if call.data == 'en':
         # –ï–°–õ–ò –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π':
            if conn:
             # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
                SQL.query('UPDATE {} SET {}=\'{}\' WHERE {}=\'{}\''.format(conf.db_table,conf.db_names[1],2,conf.db_names[0],call.message.chat.id))
                 # –∏–∑–º–µ–Ω—è–µ–º –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ.
            
            else:
             # –ï–°–õ–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:
                SQL.query('INSERT INTO {} ({},{}) VALUES({},{})'.format(conf.db_table,conf.db_names[0],conf.db_names[1],call.message.chat.id,2))
                 # –Ω–∞–∑–Ω–∞—á–∞–µ–º –≤ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
            
            bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.id, text=Lang.Eng('a0')+Lang.Eng('a0_1'))
             # –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ.

            bot.send_message(call.message.chat.id, Lang.Eng('a1'))
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
            
bot.polling(none_stop=True, interval=0)
# –∑–∞—Å—Ç–∞–≤–ª—è–µ–º –±–æ—Ç–∞ –Ω–µ –ø—Ä–µ–∫—Ä–∞—â–∞—Ç—å —Ä–∞–±–æ—Ç—É.
